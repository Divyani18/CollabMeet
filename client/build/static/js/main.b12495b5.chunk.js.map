{"version":3,"sources":["Components/NavBar.js","Components/WhiteBoard.js","Components/Chatbox.js","Components/VideoCanvas.js","Components/App.js","index.js"],"names":["NavBar","theme","useTheme","isMatch","useMediaQuery","breakpoints","down","_React$useState","React","useState","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","handleClose","react_default","a","createElement","Box","display","flexDirection","bgcolor","color","yellow","p","alignItems","Typography","flexGrow","justifyContent","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu_default","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","Button","client","W3CWebSocket","msg","isReceived","verified","WhiteBoard","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Sketch","setup","sketchWidth","document","getElementById","offsetWidth","createCanvas","background","draw","noStroke","fill","mouseIsPressed","ellipse","mouseX","mouseY","mouseDragged","map","message","x","y","p5","console","log","data","type","send","JSON","stringify","state","callId","myRef","createRef","close","_this2","myP5","current","onmessage","dataFromServer","parse","sentCode","concat","toConsumableArray","Container","callEnded","endCall","styles","ButtonGroup","joinedCall","ref","Component","Chatbox","text","messages","user","count","getUserName","bind","assertThisInitialized","enteredText","onButtonClick","onopen","setState","target","value","_this3","style","height","onChange","placeholder","orange","py","px","width","overflow","key","Card","padding","margin","Avatar","backgroundColor","red","variant","gutterBottom","flexgrow","alignitem","my","TextField","label","signaling","constraints","audio","video","iceConfiguration","iceServers","push","urls","pc","RTCPeerConnection","ontrack","_ref","asyncToGenerator","regenerator_default","mark","_callee","remoteViews","wrap","_context","prev","next","getElementsByClassName","srcObject","abrupt","streams","stop","_x","apply","arguments","VideoCanvas","callInfo","participantId","isClicked","start","onicecandidate","_ref2","candidate","_ref3","_callee2","stream","selfView","_context2","offerCreator","onnegotiationneeded","sent","desc","setRemoteDescription","navigator","mediaDevices","getUserMedia","getTracks","forEach","track","addTrack","t0","createAnswer","t1","setLocalDescription","localDescription","addIceCandidate","t2","error","_x2","err","createOffer","_context3","_context4","onremovetrack","onremovestream","oniceconnectionstatechange","onsignalingstatechange","onicegatheringstatechange","removeAttribute","closeVideoCall","Grid","container","item","flexWrap","autoPlay","className","muted","App","generateCode","joinCall","isCaller","Math","floor","random","toString","substring","Components_NavBar","xs","md","marginBottom","Components_WhiteBoard","Components_Chatbox","Components_VideoCanvas","ReactDOM","render","Components_App"],"mappings":"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","file":"static/js/main.b12495b5.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, Typography, Button, IconButton, useMediaQuery, useTheme, Menu, MenuItem} from \"@material-ui/core\";\nimport yellow from '@material-ui/core/colors/yellow';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nfunction NavBar() {\n\n    const theme = useTheme();\n\n    const isMatch = useMediaQuery(theme.breakpoints.down('sm'))\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n    \n    return (\n      \n        <Box display=\"flex\" flexDirection=\"row\" bgcolor=\"rgba(0,0,0,0.8)\" color={yellow[900]} p={2}>\n\n            <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n              <Typography>CollabMeet</Typography>\n            </Box>\n\n            {isMatch? \n            <Box flexGrow={2} display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-end\">\n              <div>\n                \n                <IconButton color=\"inherit\" aria-label=\"menu\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                  <MenuIcon/>\n                </IconButton>\n\n                <Menu\n                  id=\"simple-menu\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}>\n                  \n                  <MenuItem onClick={handleClose}>About</MenuItem>\n                  <MenuItem onClick={handleClose}>Get Started</MenuItem>\n\n                </Menu>\n              </div>\n\n            </Box> :\n\n            <Box flexGrow={2} display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-end\">\n              <Button color=\"inherit\">About</Button>\n              <Button color=\"inherit\">Get Started</Button>\n            </Box>}\n        \n        </Box>)\n\n}\n\nexport default NavBar; ","import React from \"react\";\nimport p5 from \"p5\"\nimport { Box, Button, Container, ButtonGroup} from \"@material-ui/core\";\n\nimport {w3cwebsocket as W3CWebSocket} from \"websocket\"\n\nconst client = new W3CWebSocket(\"ws://127.0.0.1:4000\");\n\nvar msg = [];\nvar isReceived = 0;\nvar verified = 0;\n\nclass WhiteBoard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: \"\",\n            callId: \"\",\n        }\n\n        this.myRef = React.createRef();\n    }\n\n    joinedCall(id) {\n        this.state.callId = id;\n    }\n\n    endCall() {\n        client.close(1000, () => {\n          console.log(\"Call has been ended.\"); \n        })\n    }\n\n    Sketch = (p) => {\n\n            p.setup = () => {\n                var sketchWidth;\n                var sketchHeight;\n        \n                sketchWidth = document.getElementById(\"board\").offsetWidth;\n                sketchHeight=400;\n                p.createCanvas(sketchWidth, sketchHeight);\n                p.background(255,255,255);\n            }\n        \n   \n        p.draw = () => {\n            if(verified) {\n                p.noStroke();\n                p.fill(0,0,255);\n                \n                if(p.mouseIsPressed)\n                {\n                    p.ellipse(p.mouseX,p.mouseY,5,5);\n                    this.mouseDragged(p);\n                    \n                }    \n    \n                if(isReceived) {\n    \n                    msg.map((message) => {\n                        return(\n                            p.ellipse(message.x,message.y,5,5));            \n                    })\n                    \n                }\n            }\n        }\n     }\n   \n\n    componentDidMount() {\n        this.myP5 = new p5(this.Sketch, this.myRef.current);\n\n        client.onmessage = (message) => {\n            const dataFromServer = JSON.parse(message.data);\n            console.log(\"Got reply\", dataFromServer);\n\n            if(dataFromServer.sentCode === this.state.callId)\n            {\n                verified = 1;\n            }\n            else if (dataFromServer.type === \"coordinates\" && verified) {\n                isReceived = 1;\n                msg = [...msg,{\n                    x: dataFromServer.x,\n                    y: dataFromServer.y\n                }]\n\n            }\n            else\n            {\n                isReceived = 0;\n            }\n        }\n\n    }\n\n    /*setup = (p5, canvasParentRef) => {\n        var sketchWidth;\n        var sketchHeight;\n\n        sketchWidth = document.getElementById(\"board\").offsetWidth;\n        sketchHeight=400;\n        p5.createCanvas(sketchWidth, sketchHeight).parent(canvasParentRef);\n        p5.background(255,255,255);\n    }*/\n\n    mouseDragged = (p5) => {\n\n        if(verified) {\n            console.log(\"Sending...\"+ p5.mouseX + \", \" + p5.mouseY);\n\n            var data = {\n                x: p5.mouseX,\n                y: p5.mouseY,\n                type: \"coordinates\",\n            \n            }\n\n            client.send(JSON.stringify(data));\n        }\n        \n    }\n\n    /*draw = (p5) => {\n\n        if(verified) {\n            p5.noStroke();\n            p5.fill(0,0,255);\n            \n            if(p5.mouseIsPressed)\n            {\n                p5.ellipse(p5.mouseX,p5.mouseY,5,5);\n                this.mouseDragged(p5);\n                \n            }    \n\n            if(isReceived) {\n\n                msg.map((message) => {\n                    return(\n                        p5.ellipse(message.x,message.y,5,5));            \n                })\n                \n            }\n        }\n            \n    }*/\n\n    render() {\n        \n        return (\n\n            <Container>\n                {this.props.callEnded ? this.endCall() : console.log(\"On call\")}\n\n                <Box display=\"flex\" flexDirection=\"row\" bgcolor=\"rgb(0,0,0)\" color=\"green\">\n                    <Box flexGrow={2}>\n                        <p>WhiteBoard</p>\n                    </Box>\n\n                    <Box display=\"flex\" flexGrow={0.1} styles={{justifyContent: \"flex-end\"}}>\n                        <ButtonGroup color=\"secondary\" aria-label=\"outlined secondary button group\">\n                            <Button color=\"secondary\" onClick={this.joinedCall(this.props.callId)}>Pen</Button>\n                        </ButtonGroup>\n                    </Box>\n                </Box>\n            \n                <Box ref={this.myRef} id=\"board\" >\n\n                </Box>\n                \n            </Container>\n\n        );\n    }\n}\n\nexport default WhiteBoard;","import React from \"react\";\nimport { Box, Container, Card, Avatar, Typography, ButtonGroup, Button} from \"@material-ui/core\";\nimport orange from '@material-ui/core/colors/orange';\nimport red from \"@material-ui/core/colors/red\";\nimport TextField from '@material-ui/core/TextField';\nimport {w3cwebsocket as W3CWebSocket} from \"websocket\";\n\nconst client = new W3CWebSocket(\"ws://127.0.0.1:4000\")\n\nvar verified = 0;\n\nclass Chatbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: \"\",\n            messages: [],\n            user : \"\",\n            count : \"\",\n            callId : \"\"\n        }\n\n        this.getUserName = this.getUserName.bind(this);\n        this.enteredText = this.enteredText.bind(this);\n        this.joinedCall = this.joinedCall.bind(this);\n        this.onButtonClick = this.onButtonClick.bind(this);\n    }\n\n    componentDidMount() {\n        client.onopen = () => {\n          console.log(\"Client connected to server...\");\n        }\n    \n        client.onmessage = (message) => {\n          const dataFromServer = JSON.parse(message.data);\n\n          if(dataFromServer.sentCode === this.state.callId)\n          {\n            console.log(dataFromServer.sentCode, \"verified\", verified);\n            verified = 1;\n          }\n          if (dataFromServer.type === \"message\" && verified) {\n            this.setState((state) => {\n              console.log(\"Got reply\", dataFromServer);\n              return (\n                {\n                  messages: [...state.messages,\n                  {\n                    msg: dataFromServer.msg,\n                    user: dataFromServer.user,\n                    count: dataFromServer.count\n                  }]\n                }\n              )\n            }\n            );\n          }\n        }\n      }\n    \n    enteredText(event) {\n        this.setState(() => {\n            return {\n                text : event.target.value}\n        })\n    }\n    \n    onButtonClick() {\n\n      if(verified) {\n\n        client.send(JSON.stringify({\n          type: \"message\",\n          msg: this.state.text,\n          user: this.state.user,\n          count: this.state.count + 1\n        }))\n\n      }\n\n\n    }\n\n    getUserName(event) {\n        this.setState(() => {\n            return {\n                user : event.target.value}\n        })\n\n\n    }\n\n    joinedCall(id) {\n      this.state.callId = id;\n    }\n\n    endCall() {\n      client.close(1000, () => {\n        console.log(\"Call has been ended.\"); \n      })\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.props.callEnded ? this.endCall() : console.log(\"On call\")}\n\n                <Box display=\"flex\" flexDirection=\"row\">\n                  <input style={{height: \"37px\", flexGrow: 1}} onChange={this.getUserName} placeholder=\"Enter username before chat...\" />\n                  <ButtonGroup style={{flexGrow: 0.1}} color=\"secondary\" aria-label=\"outlined secondary button group\">\n                      <Button onClick={this.joinedCall(this.props.callId)}>Submit</Button>\n                  </ButtonGroup>\n\n                </Box>\n                \n                <Box display=\"flex\" flexDirection=\"column\" bgcolor={orange[50]}>\n                    <Box flexGrow={1} py={0.2} px={1} bgcolor=\"rgb(0,0,0)\" color=\"green\"><h4>ChatBox</h4></Box>\n                    <div style={{ width: \"100%\", height: \"250px\", display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\", overflow: \"auto\"}}>\n                        \n                        {this.state.messages.map(message => \n                            <Box key={message.msg} style={{display: \"flex\", flexDirection: \"row\", justifyContent: this.state.user === message.user? \"flex-end\" : \"flex-start\"}}>\n\n                                <Card style={{padding: \"10px\", margin: \"5px\"}}>\n                                  <Box display=\"flex\" flexDirection=\"row\"><Avatar style={{backgroundColor : red[700]}}>{message.user[0]}</Avatar><Box px={0.5} py={1}><strong> {message.user} : </strong></Box></Box>\n                                  <div><Typography variant=\"body2\" gutterBottom>{message.msg}</Typography></div>\n                                </Card>\n                                \n                            </Box>)\n                        \n                        }\n                        \n                    </div>\n\n                    <Box flexgrow={2} alignitem=\"flex-end\" display=\"flex\" flexDirection=\"row\" my={2}>\n                        <TextField onChange={this.enteredText} id=\"outlined-basic\" label=\"Type a message...\" variant=\"outlined\" style={{width: \"75%\"}}/>\n                        <button onClick={this.onButtonClick} style={{width: \"25%\"}}>Send</button>\n                    </Box>\n                    \n                </Box>\n\n            </Container>)\n    }\n   \n}\n\nexport default Chatbox;","import React from \"react\";\nimport { Box, Button, ButtonGroup, Grid} from \"@material-ui/core\";\n\nimport {w3cwebsocket as W3CWebSocket} from \"websocket\"\n\nconst signaling = new W3CWebSocket(\"ws://127.0.0.1:4000\");\n\nconst constraints = {audio: true, video: true};\n\nconst iceConfiguration = { }\niceConfiguration.iceServers = [];\n\n//stun server\niceConfiguration.iceServers.push({\n    urls:  \"stun:stun.l.google.com:19302\"\n })    \n   \nconst pc = new RTCPeerConnection(iceConfiguration);\n\n\n// Once remote track media arrives, show it in remote video element.\npc.ontrack = async (event) => {\n  \n  console.log(\"Called\")\n  var remoteViews = document.getElementsByClassName(\"remoteVideo\");\n\n  console.log(\"remoteViewSet\");\n\n  // Don't set srcObject again if it is already set.\n  if(remoteViews[0].srcObject) return;\n\n  remoteViews[0].srcObject = event.streams[0];\n  console.log(\"sourceObjectSet\", event.streams[0]);\n  \n};\n\n\nclass VideoCanvas extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            callInfo: \"\",\n            callId: \"\",\n            participantId: \"\",\n            isClicked: 0\n        }\n\n        this.joinedCall = this.joinedCall.bind(this);\n        this.start = this.start.bind(this);\n\n    }\n\n    componentDidMount() {\n\n      // Send any ice candidatCheck these out:es to the other peer.\n      pc.onicecandidate = ({candidate}) => {\n        console.log(JSON.stringify({candidate}));\n        console.log(\"i'm a candidate\");\n        signaling.send(JSON.stringify({candidate}));\n        \n      }\n\n        signaling.onmessage = async (message) => {\n          try {\n\n            console.log(\"hey1\");\n            var dataFromServer = JSON.parse(message.data);\n            console.log(\"Received description:\", dataFromServer);\n\n            if(dataFromServer.sentCode && this.state.callInfo === \"C\")\n            {\n              console.log(\"participantId set\")\n               this.setState(() => {\n                 return {\n                   participantId: dataFromServer.sentCode\n                 }\n               })\n\n               console.log(\"caller's id\", this.state.callId);\n               console.log(\"participant's id\", this.state.participantId);\n\n               if(this.state.participantId === this.state.callId)\n               {\n                  console.log(\"Verification done!\")\n                  pc.onnegotiationneeded = await this.offerCreator();\n               }\n               \n            }              \n            else if (!dataFromServer.candidate) {\n              //If you get an offer, you need to reply with an answer.\n        \n              if (dataFromServer.desc.type === 'offer' && this.state.callInfo !== \"C\") {\n                this.setState(() => {\n                  return {\n                    callInfo : \"R\"\n                  }\n                  \n                })\n\n                console.log(\"hey1.1\");\n                console.log(\"Remote desc\",dataFromServer.desc);\n                await pc.setRemoteDescription(dataFromServer.desc);\n                \n                const stream = await navigator.mediaDevices.getUserMedia(constraints);\n                var selfView = document.getElementById(\"localVideo\");\n\n                stream.getTracks().forEach((track) =>\n                  pc.addTrack(track, stream));\n        \n                selfView.srcObject = stream;\n\n                await pc.setLocalDescription(await pc.createAnswer());\n                signaling.send(JSON.stringify({desc: pc.localDescription}));\n\n                //}\n        \n              } else if (dataFromServer.desc.type === 'answer' && this.state.callInfo === \"C\") {\n                console.log(\"hey1.2\");\n\n                await pc.setRemoteDescription(dataFromServer.desc);\n                console.log(\"Remote desc after recieving the answer\",dataFromServer.desc);\n        \n              } else {\n                console.log('Unsupported SDP type.');\n              }\n\n            }\n            else if (dataFromServer.candidate) {\n               await pc.addIceCandidate(dataFromServer.candidate);\n               console.log(\"hey2\");\n            }\n\n          } catch (err) {\n            console.error(\"ERROR:\",err);\n            console.log(\"hey3\");\n          }\n        };\n      \n    };\n\n    joinedCall(id) {\n      \n      try{\n        console.log(\"From joinedCall\",id);\n        this.state.callId = id;\n        /*this.setState(() => {\n          return {\n            callId : id\n          }\n        })*/\n\n        console.log(\"From joinedCall\",this.state.callId);\n\n        signaling.send(JSON.stringify({sentCode: this.state.callId}));\n        console.log(JSON.stringify({sentCode: this.state.callId}));\n  \n      }catch (err) {\n        console.error(\"ERROR From joinedCall:\",err);\n\n      }\n      \n\n    }\n\n    async offerCreator() {\n      try {   \n\n          await pc.setLocalDescription(await pc.createOffer());\n\n          // Send the offer to the other peer.\n          signaling.send(JSON.stringify({desc: pc.localDescription}));\n          console.log(JSON.stringify({desc: pc.localDescription}));\n    \n      \n      } catch (err) {\n          console.error(err);\n      }\n  \n    }\n\n    // Call start() to initiate.\n    async start(id) {\n      try {\n        // Get local stream, show it in self-view, and add it to be sent.\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n        \n        var selfView = document.getElementById(\"localVideo\");\n        \n        stream.getTracks().forEach((track) =>\n          pc.addTrack(track, stream));\n        \n        selfView.srcObject = stream;\n        console.log(\"Caller Stream\", stream);\n\n        this.setState(() => {\n          return {\n            callInfo : \"C\",\n            callId : id\n          }\n          \n        })\n        \n        console.log(\"Caller's info set\",this.state.callId);\n\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    closeVideoCall() {\n      var remoteViews = document.getElementsByClassName(\"remoteVideo\");\n      var selfView = document.getElementById(\"localVideo\");\n    \n      if (pc) {\n        pc.ontrack = null;\n        pc.onremovetrack = null;\n        pc.onremovestream = null;\n        pc.onicecandidate = null;\n        pc.oniceconnectionstatechange = null;\n        pc.onsignalingstatechange = null;\n        pc.onicegatheringstatechange = null;\n        pc.onnegotiationneeded = null;\n    \n        if (remoteViews[0].srcObject) {\n          remoteViews[0].srcObject.getTracks().forEach(track => track.stop());\n        }\n    \n        if (selfView.srcObject) {\n          selfView.srcObject.getTracks().forEach(track => track.stop());\n        }\n    \n        pc.close();\n\n      }\n    \n      remoteViews[0].removeAttribute(\"src\");\n      remoteViews[0].removeAttribute(\"srcObject\");\n      selfView.removeAttribute(\"src\");\n      remoteViews[0].removeAttribute(\"srcObject\");\n    \n    }\n\n    render() {\n\n        return (\n            <Box>\n              {this.props.callEnded ? this.closeVideoCall() : console.log(\"On call\")}\n\n              <Box p={2}>   \n                  <ButtonGroup color=\"secondary\" aria-label=\"outlined secondary button group\" >\n                    <Button onClick={this.props.callInfo === \"C\"? () => this.start(this.props.callId) : () => {this.joinedCall(this.props.callId)}}>\n                      Video call\n                    </Button>\n                  </ButtonGroup>\n              </Box>\n              \n                <Grid container style={{justifyContent: \"space-around\"}}>\n                  <Grid item style={{flexWrap: \"wrap\", margin: \"20px\", backgroundColor: \"rgb(0,0,0)\", height: \"250px\", width: \"250px\"}}>\n                    <video id=\"localVideo\" autoPlay style={{height: \"200px\", width: \"250px\"}}></video>\n                  </Grid>\n                  \n                  <Grid item style={{flexWrap: \"wrap\", margin: \"20px\", backgroundColor: \"rgb(0,0,0)\", height: \"250px\", width: \"250px\"}}>\n                    <video className=\"remoteVideo\" autoPlay muted style={{height: \"200px\", width: \"250px\"}}></video>\n                  </Grid> \n                </Grid>  \n            </Box>\n        )\n        \n    }\n}\n\nexport default VideoCanvas;","import React from \"react\";\nimport \"../App.css\"\nimport NavBar from \"./NavBar.js\";\nimport WhiteBoard from \"./WhiteBoard.js\";\nimport Chatbox from \"./Chatbox.js\";\nimport { Box, Grid, Button, ButtonGroup} from \"@material-ui/core\";\nimport VideoCanvas from \"./VideoCanvas\";\nimport {w3cwebsocket as W3CWebSocket} from \"websocket\"\n\nconst client = new W3CWebSocket(\"ws://127.0.0.1:4000\");\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    \n    this.state = {\n      callId : \"\",\n      callInfo : \"\",\n      callEnded : 0\n    }\n\n    this.generateCode = this.generateCode.bind(this);\n    this.enteredText = this.enteredText.bind(this);\n    this.joinCall = this.joinCall.bind(this);\n    this.isCaller = this.isCaller.bind(this);\n    this.endCall = this.endCall.bind(this);\n\n  }\n\n  generateCode() {\n    const id = () => {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    } \n\n    this.setState(() => {\n      return {\n        callId : id() + id() + \"-\" + id()\n      }\n    });\n      \n  }\n\n  enteredText(event) {\n    this.setState(() => {\n        return {\n          callId : event.target.value\n        }\n    })\n  }\n\n  joinCall() {\n    client.send(JSON.stringify({sentCode: this.state.callId}));\n    console.log(JSON.stringify({sentCode: this.state.callId}));\n\n  }\n\n  isCaller() {\n    this.setState(() => {\n      return {\n        callInfo : \"C\"\n      }\n    })\n  }\n\n  endCall() {\n    client.close(1000, () => {\n      console.log(\"Call has been ended.\");\n    })\n\n    this.setState(() => {\n      return {\n        callEnded : 1\n      }\n    })\n\n  }\n\n  render() {\n\n    return (\n      <div>\n        <Grid>\n          <NavBar /> \n        </Grid>\n        \n          <Grid container>\n            <Box style={{margin: \"20px\"}}>\n              <ButtonGroup  color=\"secondary\" aria-label=\"outlined secondary button group\">\n                <Button onClick={this.generateCode}>Generate meeting code</Button>\n\n              </ButtonGroup>\n\n              <input placeholder=\"Enter meeting code...\"  style={{height: \"37px\", width: \"270px\"}} onChange={this.enteredText} value={this.state.callId} />\n\n              <ButtonGroup  color=\"secondary\" aria-label=\"outlined secondary button group\">\n                <Button onClick={this.joinCall}>Join</Button>\n                <Button onClick={this.isCaller}>Call</Button>\n                <Button onClick={this.endCall}>End</Button>\n              </ButtonGroup>\n            </Box>\n\n       </Grid>*/}\n\n         <Grid container>\n            <Grid item xs={12} md={8} py={2} style={{marginBottom: \"50px\"}}> \n              <WhiteBoard callId={this.state.callId} callEnded={this.state.callEnded} />\n            </Grid>\n    \n            <Grid item xs={12} md={4} py={2} style={{marginBottom: \"50px\"}}>\n              <Chatbox callId={this.state.callId} callEnded={this.state.callEnded} />\n            </Grid>\n\n          </Grid>\n\n          <Grid container style={{justifyContent: \"center\"}}>\n            <Grid item>\n              <VideoCanvas callId={this.state.callId} callInfo={this.state.callInfo} callEnded={this.state.callEnded} />\n            </Grid>\n              \n          </Grid>\n        \n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}